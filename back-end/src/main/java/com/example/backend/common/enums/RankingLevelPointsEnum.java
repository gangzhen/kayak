package com.example.backend.common.enums;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.ToString;

@Getter
@AllArgsConstructor
@ToString
public enum RankingLevelPointsEnum {

    NULL("zero", 0, null, 0, null, new int[]{}, 0),

    A2000_1_1("A2000", 1, "32人以上", 1, "冠军", new int[]{1, 1}, 2000),
    A2000_1_2("A2000", 1, "32人以上", 2, "亚军", new int[]{2, 2}, 1500),
    A2000_1_3("A2000", 1, "32人以上", 3, "半决赛", new int[]{3, 4}, 1100),
    A2000_1_4("A2000", 1, "32人以上", 4, "前8名", new int[]{5, 8}, 800),
    A2000_1_5("A2000", 1, "32人以上", 5, "前16名", new int[]{9, 16}, 500),
    A2000_1_6("A2000", 1, "32人以上", 6, "前32名", new int[]{17, 32}, 300),

    A2000_2_1("A2000", 2, "32人以下", 1, "冠军", new int[]{1, 1}, 2000),
    A2000_2_2("A2000", 2, "32人以下", 2, "亚军", new int[]{2, 2}, 1500),
    A2000_2_3("A2000", 2, "32人以下", 3, "半决赛", new int[]{3, 4}, 1100),
    A2000_2_4("A2000", 2, "32人以下", 4, "前8名", new int[]{5, 8}, 800),
    A2000_2_5("A2000", 2, "32人以下", 5, "前16名", new int[]{9, 16}, 500),


    A1600_1_1("A1600", 1, "32人以上", 1, "冠军", new int[]{1, 1}, 1600),
    A1600_1_2("A1600", 1, "32人以上", 2, "亚军", new int[]{2, 2}, 1400),
    A1600_1_3("A1600", 1, "32人以上", 3, "半决赛", new int[]{3, 4}, 1000),
    A1600_1_4("A1600", 1, "32人以上", 4, "前8名", new int[]{5, 8}, 750),
    A1600_1_5("A1600", 1, "32人以上", 5, "前16名", new int[]{9, 16}, 350),
    A1600_1_6("A1600", 1, "32人以上", 6, "前32名", new int[]{17, 32}, 150),

    A1600_2_1("A1600", 2, "32人以下", 1, "冠军", new int[]{1, 1}, 1600),
    A1600_2_2("A1600", 2, "32人以下", 2, "亚军", new int[]{2, 2}, 1200),
    A1600_2_3("A1600", 2, "32人以下", 3, "半决赛", new int[]{3, 4}, 800),
    A1600_2_4("A1600", 2, "32人以下", 4, "前8名", new int[]{5, 8}, 500),
    A1600_2_5("A1600", 2, "32人以下", 5, "前16名", new int[]{9, 16}, 300),


    A1200_1_1("A1200", 1, "32人以上", 1, "冠军", new int[]{1, 1}, 1200),
    A1200_1_2("A1200", 1, "32人以上", 2, "亚军", new int[]{2, 2}, 1000),
    A1200_1_3("A1200", 1, "32人以上", 3, "半决赛", new int[]{3, 4}, 700),
    A1200_1_4("A1200", 1, "32人以上", 4, "前8名", new int[]{5, 8}, 450),
    A1200_1_5("A1200", 1, "32人以上", 5, "前16名", new int[]{9, 16}, 290),
    A1200_1_6("A1200", 1, "32人以上", 6, "前32名", new int[]{17, 32}, 100),

    A1200_2_1("A1200", 2, "32人以下", 1, "冠军", new int[]{1, 1}, 1200),
    A1200_2_2("A1200", 2, "32人以下", 2, "亚军", new int[]{2, 2}, 900),
    A1200_2_3("A1200", 2, "32人以下", 3, "半决赛", new int[]{3, 4}, 600),
    A1200_2_4("A1200", 2, "32人以下", 4, "前8名", new int[]{5, 8}, 400),
    A1200_2_5("A1200", 2, "32人以下", 5, "前16名", new int[]{9, 16}, 200),


    A900_1_1("A900", 1, "32人以上", 1, "冠军", new int[]{1, 1}, 900),
    A900_1_2("A900", 1, "32人以上", 2, "亚军", new int[]{2, 2}, 630),
    A900_1_3("A900", 1, "32人以上", 3, "半决赛", new int[]{3, 4}, 450),
    A900_1_4("A900", 1, "32人以上", 4, "前8名", new int[]{5, 8}, 270),
    A900_1_5("A900", 1, "32人以上", 5, "前16名", new int[]{9, 16}, 180),
    A900_1_6("A900", 1, "32人以上", 6, "前32名", new int[]{17, 32}, 90),

    A900_2_1("A900", 2, "32人以下", 1, "冠军", new int[]{1, 1}, 900),
    A900_2_2("A900", 2, "32人以下", 2, "亚军", new int[]{2, 2}, 630),
    A900_2_3("A900", 2, "32人以下", 3, "半决赛", new int[]{3, 4}, 450),
    A900_2_4("A900", 2, "32人以下", 4, "前8名", new int[]{5, 8}, 225),
    A900_2_5("A900", 2, "32人以下", 5, "前16名", new int[]{9, 16}, 90),


    B800_1_1("B800", 1, "32人以上", 1, "冠军", new int[]{1, 1}, 800),
    B800_1_2("B800", 1, "32人以上", 2, "亚军", new int[]{2, 2}, 560),
    B800_1_3("B800", 1, "32人以上", 3, "半决赛", new int[]{3, 4}, 400),
    B800_1_4("B800", 1, "32人以上", 4, "前8名", new int[]{5, 8}, 240),
    B800_1_5("B800", 1, "32人以上", 5, "前16名", new int[]{9, 16}, 160),
    B800_1_6("B800", 1, "32人以上", 6, "前32名", new int[]{17, 32}, 80),

    B800_2_1("B800", 2, "32人以下", 1, "冠军", new int[]{1, 1}, 800),
    B800_2_2("B800", 2, "32人以下", 2, "亚军", new int[]{2, 2}, 560),
    B800_2_3("B800", 2, "32人以下", 3, "半决赛", new int[]{3, 4}, 400),
    B800_2_4("B800", 2, "32人以下", 4, "前8名", new int[]{5, 8}, 200),
    B800_2_5("B800", 2, "32人以下", 5, "前16名", new int[]{9, 16}, 80),


    B600_1_1("B600", 1, "32人以上", 1, "冠军", new int[]{1, 1}, 600),
    B600_1_2("B600", 1, "32人以上", 2, "亚军", new int[]{2, 2}, 420),
    B600_1_3("B600", 1, "32人以上", 3, "半决赛", new int[]{3, 4}, 300),
    B600_1_4("B600", 1, "32人以上", 4, "前8名", new int[]{5, 8}, 180),
    B600_1_5("B600", 1, "32人以上", 5, "前16名", new int[]{9, 16}, 120),
    B600_1_6("B600", 1, "32人以上", 6, "前32名", new int[]{17, 32}, 60),

    B600_2_1("B600", 2, "32人以下", 1, "冠军", new int[]{1, 1}, 600),
    B600_2_2("B600", 2, "32人以下", 2, "亚军", new int[]{2, 2}, 420),
    B600_2_3("B600", 2, "32人以下", 3, "半决赛", new int[]{3, 4}, 300),
    B600_2_4("B600", 2, "32人以下", 4, "前8名", new int[]{5, 8}, 150),
    B600_2_5("B600", 2, "32人以下", 5, "前16名", new int[]{9, 16}, 60),


    B500_1_1("B500", 1, "32人以上", 1, "冠军", new int[]{1, 1}, 500),
    B500_1_2("B500", 1, "32人以上", 2, "亚军", new int[]{2, 2}, 350),
    B500_1_3("B500", 1, "32人以上", 3, "半决赛", new int[]{3, 4}, 250),
    B500_1_4("B500", 1, "32人以上", 4, "前8名", new int[]{5, 8}, 150),
    B500_1_5("B500", 1, "32人以上", 5, "前16名", new int[]{9, 16}, 100),
    B500_1_6("B500", 1, "32人以上", 6, "前32名", new int[]{17, 32}, 50),


    B500_2_1("B500", 2, "32人以下", 1, "冠军", new int[]{1, 1}, 500),
    B500_2_2("B500", 2, "32人以下", 2, "亚军", new int[]{2, 2}, 250),
    B500_2_3("B500", 2, "32人以下", 3, "半决赛", new int[]{3, 4}, 250),
    B500_2_4("B500", 2, "32人以下", 4, "前8名", new int[]{5, 8}, 125),
    B500_2_5("B500", 2, "32人以下", 5, "前16名", new int[]{9, 16}, 50),


    C400_1_1("C400", 1, "32人以上", 1, "冠军", new int[]{1, 1}, 400),
    C400_1_2("C400", 1, "32人以上", 2, "亚军", new int[]{2, 2}, 280),
    C400_1_3("C400", 1, "32人以上", 3, "半决赛", new int[]{3, 4}, 200),
    C400_1_4("C400", 1, "32人以上", 4, "前8名", new int[]{5, 8}, 120),
    C400_1_5("C400", 1, "32人以上", 5, "前16名", new int[]{9, 16}, 80),
    C400_1_6("C400", 1, "32人以上", 6, "前32名", new int[]{17, 32}, 40),

    C400_2_1("C400", 2, "32人以下", 1, "冠军", new int[]{1, 1}, 400),
    C400_2_2("C400", 2, "32人以下", 2, "亚军", new int[]{2, 2}, 280),
    C400_2_3("C400", 2, "32人以下", 3, "半决赛", new int[]{3, 4}, 200),
    C400_2_4("C400", 2, "32人以下", 4, "前8名", new int[]{5, 8}, 100),
    C400_2_5("C400", 2, "32人以下", 5, "前16名", new int[]{9, 16}, 40),


    C200_1_1("C200", 1, "32人以上", 1, "冠军", new int[]{1, 1}, 200),
    C200_1_2("C200", 1, "32人以上", 2, "亚军", new int[]{2, 2}, 140),
    C200_1_3("C200", 1, "32人以上", 3, "半决赛", new int[]{3, 4}, 100),
    C200_1_4("C200", 1, "32人以上", 4, "前8名", new int[]{5, 8}, 60),
    C200_1_5("C200", 1, "32人以上", 5, "前16名", new int[]{9, 16}, 40),
    C200_1_6("C200", 1, "32人以上", 6, "前32名", new int[]{17, 32}, 20),

    C200_2_1("C200", 2, "32人以下", 1, "冠军", new int[]{1, 1}, 200),
    C200_2_2("C200", 2, "32人以下", 2, "亚军", new int[]{2, 2}, 140),
    C200_2_3("C200", 2, "32人以下", 3, "半决赛", new int[]{3, 4}, 100),
    C200_2_4("C200", 2, "32人以下", 4, "前8名", new int[]{5, 8}, 50),
    C200_2_5("C200", 2, "32人以下", 5, "前16名", new int[]{9, 16}, 20),


    C100_1_1("C100", 1, "32人以上", 1, "冠军", new int[]{1, 1}, 100),
    C100_1_2("C100", 1, "32人以上", 2, "亚军", new int[]{2, 2}, 70),
    C100_1_3("C100", 1, "32人以上", 3, "半决赛", new int[]{3, 4}, 50),
    C100_1_4("C100", 1, "32人以上", 4, "前8名", new int[]{5, 8}, 30),
    C100_1_5("C100", 1, "32人以上", 5, "前16名", new int[]{9, 16}, 20),
    C100_1_6("C100", 1, "32人以上", 6, "前32名", new int[]{17, 32}, 10),

    C100_2_1("C100", 2, "32人以下", 1, "冠军", new int[]{1, 1}, 100),
    C100_2_2("C100", 2, "32人以下", 2, "亚军", new int[]{2, 2}, 70),
    C100_2_3("C100", 2, "32人以下", 3, "半决赛", new int[]{3, 4}, 50),
    C100_2_4("C100", 2, "32人以下", 4, "前8名", new int[]{5, 8}, 25),
    C100_2_5("C100", 2, "32人以下", 5, "前16名", new int[]{9, 16}, 10),


    ;

    /**
     * 级别code
     */
    private final String code;
    /**
     * 总参赛人数code
     */
    private final int totalCode;
    /**
     * 总参赛人数级别
     */
    private final String totalLevel;
    /**
     * 名次code
     */
    private final int rankingCode;
    /**
     * 名次级别
     */
    private final String rankingLevel;
    /**
     * 名次范围
     */
    private final int[] rankingRange;
    /**
     * 对应积分
     */
    private final int points;

    public static RankingLevelPointsEnum getRankingPoints(String code, int totalCode, int rankingCode) {

        for (RankingLevelPointsEnum item : RankingLevelPointsEnum.values()) {
            if (item.code.equals(code)) {
                // 这里使用code分为两个个得分等级，如果后期需要根据填写名词进行比较可以更改为totalRanking[]的数组进行比较
                if (totalCode == item.getTotalCode()) {
                    // 这里使用code分为六个得分等级，如果后期需要根据填写名词进行比较可以更改为ranking[]的数组进行比较
                    if (rankingCode == item.getRankingCode()) {
                        return item;
                    }
                }
            }
        }
        return NULL;
    }

}
